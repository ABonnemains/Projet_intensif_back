-- MySQL Script generated by MySQL Workbench
-- 01/11/17 15:44:32
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

-- -----------------------------------------------------
-- Schema roule_ma_poule
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `roule_ma_poule` ;

-- -----------------------------------------------------
-- Schema roule_ma_poule
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `roule_ma_poule` DEFAULT CHARACTER SET utf8 ;
USE `roule_ma_poule` ;

-- -----------------------------------------------------
-- Table `utilisateur`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utilisateur` ;

CREATE TABLE IF NOT EXISTS `utilisateur` (
  `utilisateur_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `utilisateur_pseudo` VARCHAR(45) NOT NULL,
  `utilisateur_nom` VARCHAR(45) NOT NULL,
  `utilisateur_prenom` VARCHAR(45) NOT NULL,
  `utilisateur_portable` VARCHAR(12) NOT NULL,
  `utilisateur_score` INT NOT NULL DEFAULT 0,
  `utilisateur_points_fidelite` INT NOT NULL DEFAULT 0,
  `utilisateur_date_naissance` DATETIME NOT NULL,
  `utilisateur_mot_de_passe` VARCHAR(100) NOT NULL,
  `utilisateur_date_creation` DATETIME NOT NULL,
  `utilisateur_date_modification` DATETIME NOT NULL,
  `utilisateur_date_derniere_connexion` DATETIME NOT NULL,
  `utilisateur_token` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`utilisateur_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `utilisateur_id_UNIQUE` ON `utilisateur` (`utilisateur_id` ASC);

CREATE UNIQUE INDEX `utilisateur_pseudo_UNIQUE` ON `utilisateur` (`utilisateur_pseudo` ASC);


-- -----------------------------------------------------
-- Table `trajet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trajet` ;

CREATE TABLE IF NOT EXISTS `trajet` (
  `trajet_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `trajet_longitude_depart` VARCHAR(45) NOT NULL,
  `trajet_latitude_depart` DOUBLE NOT NULL,
  `trajet_longitude_arrivee` DOUBLE NOT NULL,
  `trajet_latitude_arrivee` DOUBLE NOT NULL,
  `trajet_public` TINYINT(1) NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`trajet_id`),
  CONSTRAINT `fk_trajet_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `trajet_id_UNIQUE` ON `trajet` (`trajet_id` ASC);

CREATE INDEX `fk_trajet_utilisateur1_idx` ON `trajet` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `evenement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `evenement` ;

CREATE TABLE IF NOT EXISTS `evenement` (
  `evenement_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `evenement_nom` VARCHAR(45) NOT NULL,
  `evenement_longitude` DOUBLE NULL,
  `evenement_latitude` DOUBLE NULL,
  `evenement_dateheure` DATETIME NOT NULL,
  `evenement_description` VARCHAR(200) NULL,
  PRIMARY KEY (`evenement_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `evenement_id_UNIQUE` ON `evenement` (`evenement_id` ASC);


-- -----------------------------------------------------
-- Table `utilisateur_evenement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utilisateur_evenement` ;

CREATE TABLE IF NOT EXISTS `utilisateur_evenement` (
  `utilisateur_evenement_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `utilisateur_evenement_utilisateur_id` INT UNSIGNED NULL,
  `utilisateur_evenement_evenement_id` INT UNSIGNED NULL,
  PRIMARY KEY (`utilisateur_evenement_id`),
  CONSTRAINT `fk_Utilisateur_has_Evenement_Utilisateur`
    FOREIGN KEY (`utilisateur_evenement_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Utilisateur_has_Evenement_Evenement1`
    FOREIGN KEY (`utilisateur_evenement_evenement_id`)
    REFERENCES `evenement` (`evenement_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_Utilisateur_has_Evenement_Evenement1_idx` ON `utilisateur_evenement` (`utilisateur_evenement_evenement_id` ASC);

CREATE INDEX `fk_Utilisateur_has_Evenement_Utilisateur_idx` ON `utilisateur_evenement` (`utilisateur_evenement_utilisateur_id` ASC);

CREATE UNIQUE INDEX `Utilisateur_Evenement_id_UNIQUE` ON `utilisateur_evenement` (`utilisateur_evenement_id` ASC);


-- -----------------------------------------------------
-- Table `assistance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assistance` ;

CREATE TABLE IF NOT EXISTS `assistance` (
  `assistance_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `utilisateur_id_2` INT NOT NULL,
  `assistance_longitude` DOUBLE NOT NULL,
  `assistance_latitude` DOUBLE NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`assistance_id`),
  CONSTRAINT `fk_assistance_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `assistance_id_UNIQUE` ON `assistance` (`assistance_id` ASC);

CREATE INDEX `fk_assistance_utilisateur1_idx` ON `assistance` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `obstacle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `obstacle` ;

CREATE TABLE IF NOT EXISTS `obstacle` (
  `obstacle_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `obstacle_description` VARCHAR(100) NULL,
  `obstacle_type` VARCHAR(45) NOT NULL,
  `obstacle_longitude` DOUBLE NOT NULL,
  `obstacle_latitude` DOUBLE NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`obstacle_id`),
  CONSTRAINT `fk_obstacle_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `obstacle_id_UNIQUE` ON `obstacle` (`obstacle_id` ASC);

CREATE INDEX `fk_obstacle_utilisateur1_idx` ON `obstacle` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `note_obstacle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `note_obstacle` ;

CREATE TABLE IF NOT EXISTS `note_obstacle` (
  `note_obstacle_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `note_obstacle_note` INT NULL,
  `obstacle_obstacle_id` INT UNSIGNED NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`note_obstacle_id`),
  CONSTRAINT `fk_note_obstacle_obstacle1`
    FOREIGN KEY (`obstacle_obstacle_id`)
    REFERENCES `obstacle` (`obstacle_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_note_obstacle_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `note_obstacle_id_UNIQUE` ON `note_obstacle` (`note_obstacle_id` ASC);

CREATE INDEX `fk_note_obstacle_obstacle1_idx` ON `note_obstacle` (`obstacle_obstacle_id` ASC);

CREATE INDEX `fk_note_obstacle_utilisateur1_idx` ON `note_obstacle` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `note_assistance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `note_assistance` ;

CREATE TABLE IF NOT EXISTS `note_assistance` (
  `note_assistance_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `note_assistance_note` INT NOT NULL,
  `assistance_assistance_id` INT UNSIGNED NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`note_assistance_id`),
  CONSTRAINT `fk_note_assistance_assistance1`
    FOREIGN KEY (`assistance_assistance_id`)
    REFERENCES `assistance` (`assistance_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_note_assistance_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `note_assistance_id_UNIQUE` ON `note_assistance` (`note_assistance_id` ASC);

CREATE INDEX `fk_note_assistance_assistance1_idx` ON `note_assistance` (`assistance_assistance_id` ASC);

CREATE INDEX `fk_note_assistance_utilisateur1_idx` ON `note_assistance` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `note_trajet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `note_trajet` ;

CREATE TABLE IF NOT EXISTS `note_trajet` (
  `note_trajet_id` INT NOT NULL,
  `note_trajet_note` INT NOT NULL,
  `trajet_trajet_id` INT UNSIGNED NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`note_trajet_id`),
  CONSTRAINT `fk_note_trajet_trajet1`
    FOREIGN KEY (`trajet_trajet_id`)
    REFERENCES `trajet` (`trajet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_note_trajet_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_note_trajet_trajet1_idx` ON `note_trajet` (`trajet_trajet_id` ASC);

CREATE INDEX `fk_note_trajet_utilisateur1_idx` ON `note_trajet` (`utilisateur_utilisateur_id` ASC);


-- -----------------------------------------------------
-- Table `note_accessibilite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `note_accessibilite` ;

CREATE TABLE IF NOT EXISTS `note_accessibilite` (
  `note_accessibilite_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `note_accessibilite_note` INT NOT NULL,
  `trajet_trajet_id` INT UNSIGNED NOT NULL,
  `utilisateur_utilisateur_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`note_accessibilite_id`),
  CONSTRAINT `fk_note_accessibilite_trajet1`
    FOREIGN KEY (`trajet_trajet_id`)
    REFERENCES `trajet` (`trajet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_note_accessibilite_utilisateur1`
    FOREIGN KEY (`utilisateur_utilisateur_id`)
    REFERENCES `utilisateur` (`utilisateur_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `note_accessibilite_id_UNIQUE` ON `note_accessibilite` (`note_accessibilite_id` ASC);

CREATE INDEX `fk_note_accessibilite_trajet1_idx` ON `note_accessibilite` (`trajet_trajet_id` ASC);

CREATE INDEX `fk_note_accessibilite_utilisateur1_idx` ON `note_accessibilite` (`utilisateur_utilisateur_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
